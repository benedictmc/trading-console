[{"C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\index.js":"1","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\App.js":"2","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Dashboard.js":"3","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Navbar.js":"4","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Sidebar.js":"5","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Plot.js":"6","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\CoinDetails.js":"7"},{"size":220,"mtime":1613722827386,"results":"8","hashOfConfig":"9"},{"size":197,"mtime":1612002889081,"results":"10","hashOfConfig":"9"},{"size":4393,"mtime":1614847250375,"results":"11","hashOfConfig":"9"},{"size":1172,"mtime":1612614217050,"results":"12","hashOfConfig":"9"},{"size":1335,"mtime":1613312430866,"results":"13","hashOfConfig":"9"},{"size":1986,"mtime":1615049362354,"results":"14","hashOfConfig":"9"},{"size":1542,"mtime":1614847316180,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"hyk9nw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\index.js",[],["34","35"],"C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\App.js",[],"C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Dashboard.js",["36","37"],"import Navbar from './Navbar.js';\r\nimport Sidebar from './Sidebar.js';\r\nimport Plot from './Plot.js';\r\n\r\nimport CoinDetails from './CoinDetails.js';\r\nimport './Dashboard.css';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const [ohlcData, setOhlcData] = useState([])\r\n\r\n    const [uid, setUid] = useState([])\r\n\r\n    const [coin, setCoin] = useState([])\r\n\r\n    const columns = [\r\n        {\r\n            name: \"Coin\",\r\n            label: \"Coin\",\r\n            options: {\r\n            filter: true,\r\n            sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"Pings\",\r\n            label: \"Pings\",\r\n            options: {\r\n            filter: true,\r\n            sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"Net Vol %\",\r\n            label: \"Net Vol %\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"Recent Net Vol\",\r\n            label: \"Recent Vol\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"Recent Total Vol BTC\",\r\n            label: \"Recent BTC\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"Recent Vol %\",\r\n            label: \"Recent Vol %\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"Datetime\",\r\n            label: \"Date\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"_id\",\r\n            label: \"Retrive OHLC\",\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <button onClick={ () => fetchPingInfo(value, tableMeta, updateValue) }>\r\n                            Get\r\n                        </button>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ];\r\n    \r\n\r\n    const options = {\r\n        filterType: 'checkbox',\r\n    };\r\n\r\n\r\n    \r\n    useEffect(() =>{\r\n        fetch('/volume/pings', {mode: 'cors'})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setTableData(data)\r\n        });\r\n    }, [])\r\n\r\n\r\n    let fetchPingInfo = (uid, tableMeta, updateValue) =>{\r\n        let coin = tableMeta['rowData'][0]\r\n        setCoin(coin+\"BTC\")\r\n        setUid(uid)\r\n        // fetch('/volume/stats/'+uid, {mode: 'cors'})\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n        //     setOhlcData(data)\r\n        //     setUid(uid)\r\n        // });\r\n    }\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <Sidebar/>\r\n            <div className=\"ping-table\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Paper className={classes.paper}>\r\n                        <MUIDataTable \r\n                            title={\"Binance Volume Pings\"} \r\n                            data={tableData} \r\n                            columns={columns} \r\n                            options={options} \r\n                        />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Paper className={classes.paper}><Plot uid={uid} coin={coin}/></Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Paper className={classes.paper}><CoinDetails uid={uid} coin={coin}/></Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default Dashboard;\r\n  \r\n","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Navbar.js",["38"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Navbar = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(1),\r\n        },\r\n        title: {\r\n          flexGrow: 1,\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                Trading Console\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n        \r\n    export default Navbar;\r\n  ","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Sidebar.js",["39","40","41"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst Sidebar = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          height: '100%',\r\n          maxWidth: 360,\r\n          backgroundColor: \"theme.palette.background.paper\",\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n       <div>\r\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n                {/* <ListItem button>\r\n                    <ListItemText primary=\"Inbox\" />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button divider>\r\n                    <ListItemText primary=\"Drafts\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Trash\" />\r\n                </ListItem>\r\n                <Divider light />\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Spam\" />\r\n                </ListItem> */}\r\n            </List>\r\n       </div>\r\n    );\r\n}\r\n    \r\nexport default Sidebar;\r\n  ","C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\Plot.js",["42","43"],"C:\\Users\\bened\\Documents\\dev\\trading-console\\src\\components\\CoinDetails.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":29,"column":12,"nodeType":"50","messageId":"51","endLine":29,"endColumn":20},{"ruleId":"48","severity":1,"message":"52","line":29,"column":22,"nodeType":"50","messageId":"51","endLine":29,"endColumn":33},{"ruleId":"48","severity":1,"message":"53","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":14},{"ruleId":"48","severity":1,"message":"54","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":16},{"ruleId":"48","severity":1,"message":"55","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":20},{"ruleId":"48","severity":1,"message":"56","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":15},{"ruleId":"48","severity":1,"message":"57","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"58","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'ohlcData' is assigned a value but never used.","Identifier","unusedVar","'setOhlcData' is assigned a value but never used.","'Button' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]